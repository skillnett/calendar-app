{"version":3,"sources":["store/calendar/calendarStore.js","components/FormField.jsx","components/calendar/PopupButtons.jsx","components/calendar/EventPopup.jsx","components/calendar/Calendar.jsx","components/shared/NotFoundPage.jsx","components/shared/appLayout/sideBarOptions.js","components/shared/appLayout/SideBar.jsx","components/shared/appLayout/AppLayout.jsx","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["initialState","events","start","Date","end","title","notes","id","eventName","eventDate","eventTime","selectedEventId","actionCreators","onEventDateChange","event","dispatch","type","payload","onPropertyChange","property","value","setInitialFields","createEvent","setEventInfo","deleteEvent","reducer","createReducer","state","resizedEvent","find","map","selectedDate","moment","selectedTime","eventDateTime","year","month","date","hours","minutes","seconds","getTime","e","selectedEvent","filter","FormField","content","form","withValidation","fieldName","config","rules","required","message","initialValue","Item","className","getFieldDecorator","PopupButtons","onClose","onSubmit","closeText","submitText","toUpperCase","onClick","cn","withFormPopup","Form","create","name","popupCoordinates","closePopup","popupShown","validateFields","handleSubmit","preventDefault","error","values","key","CSSTransition","in","timeout","classNames","unmountOnExit","style","top","y","left","x","placeholder","disabledDate","current","endOf","DnDCalendar","withDragAndDrop","BigCalendar","localizer","momentLocalizer","connectedCalendar","connect","calendar","bindActionCreators","useState","setPopupShown","setPopupCoordinates","showDetailsPopup","target","bounds","getBoundingClientRect","width","height","action","box","eventPopupProps","onSelectSlot","onEventResize","onSelectEvent","onEventDrop","defaultDate","defaultView","selectable","NotFoundPage","sidebarOptions","link","iconType","Sider","Layout","Menu","withRouterSideBar","withRouter","history","theme","mode","defaultSelectedKeys","push","AppLayout","children","Header","Content","App","exact","from","to","path","component","Calendar","createBrowserHistory","Boolean","window","location","hostname","match","store","reducers","middleware","thunk","routerMiddleware","enhancers","rootReducer","combineReducers","router","connectRouter","createStore","compose","applyMiddleware","configureStore","initialReduxState","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bc531c6.chunk.js","sourcesContent":["import { createReducer } from 'redux-create-reducer';\r\nimport moment from 'moment'\r\n\r\nconst onEventDateChangeType = 'CALENDAR_ON_EVENT_DATE_CHANGE';\r\nconst onPropertyChangeType = 'CALENDAR_ON_PROPERTY_CHANGE';\r\nconst setInitialFieldsType = 'CALENDAR_SET_INITIAL_FIELDS';\r\nconst createEventType = 'CALENDAR_CREATE_EVENT';\r\nconst setEventInfoType = 'CALENDAR_SET_EVENT_INFO';\r\nconst deleteEventType = 'CALENDAR_DELETE_EVENT';\r\n\r\nconst initialState = {\r\n  events: [\r\n    {\r\n      start: new Date(),\r\n      end: new Date(),\r\n      title: \"Gym\",\r\n      notes: '',\r\n      id: 1\r\n    },\r\n    {\r\n      start: new Date(2020, 1, 10, 15, 0),\r\n      end: new Date(2020, 1, 10, 17, 0),\r\n      title: \"Chess\",\r\n      notes: '',\r\n      id: 2\r\n    },\r\n    {\r\n      start: new Date(),\r\n      end: new Date(),\r\n      title: \"Work\",\r\n      notes: '',\r\n      id: 3\r\n    },\r\n  ],\r\n  eventName: '',\r\n  eventDate: null,\r\n  eventTime: null,\r\n  selectedEventId: null,\r\n  notes: ''\r\n}\r\n\r\nexport const actionCreators = {\r\n\r\n  onEventDateChange: ({ event, start, end }) => dispatch => dispatch({\r\n    type: onEventDateChangeType,\r\n    payload: { event, start, end }\r\n  }),\r\n\r\n  onPropertyChange: (property, value) => dispatch => dispatch({\r\n    type: onPropertyChangeType,\r\n    payload: { property, value }\r\n  }),\r\n\r\n  setInitialFields: () => dispatch => dispatch({\r\n    type: setInitialFieldsType\r\n  }),\r\n\r\n  createEvent: selectedEventId => dispatch => dispatch({\r\n    type: createEventType,\r\n    payload: { selectedEventId }\r\n  }),\r\n\r\n  setEventInfo: id => dispatch => dispatch({\r\n    type: setEventInfoType,\r\n    payload: { id }\r\n  }),\r\n\r\n  deleteEvent: selectedEventId => dispatch => dispatch({\r\n    type: deleteEventType,\r\n    payload: { selectedEventId }\r\n  })\r\n\r\n}\r\n\r\nexport const reducer = createReducer(initialState, {\r\n\r\n  [onEventDateChangeType]: (state, { payload }) => {\r\n    const { event, start, end } = payload;\r\n    let resizedEvent = state.events.find(({ id }) => id === event.id);\r\n    resizedEvent.start = start;\r\n    resizedEvent.end = end;\r\n    return {\r\n      ...state,\r\n      events: state.events.map(event => event.id === resizedEvent.id ? { ...resizedEvent } : { ...event })\r\n    }\r\n  },\r\n\r\n  [onPropertyChangeType]: (state, { payload }) => ({\r\n    ...state,\r\n    [payload.property]: payload.value\r\n  }),\r\n\r\n  [setInitialFieldsType]: state => ({\r\n    ...state,\r\n    eventName: '',\r\n    eventDate: null,\r\n    eventTime: null,\r\n    selectedEventId: null,\r\n    notes: ''\r\n  }),\r\n\r\n  [createEventType]: (state, { payload }) => {\r\n    const selectedDate = moment(state.eventDate);\r\n    const selectedTime = moment(state.eventTime);\r\n    const eventDateTime = new Date(selectedDate.year(), selectedDate.month(), selectedDate.date(), selectedTime.hours(), selectedTime.minutes(), selectedTime.seconds());\r\n    const event = {\r\n      start: state.eventDate,\r\n      end: moment(eventDateTime),\r\n      title: state.eventName,\r\n      notes: state.notes,\r\n      id: new Date().getTime()\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      events: payload.selectedEventId ? state.events.map(e => payload.selectedEventId === e.id ? { ...event } : { ...e }) :\r\n        [...state.events, { ...event }]\r\n    }\r\n  },\r\n\r\n  [setEventInfoType]: (state, { payload }) => {\r\n    const selectedEvent = state.events.find(({ id }) => id === payload.id);\r\n    const { start, end, title, notes, id } = selectedEvent;\r\n    return {\r\n      ...state,\r\n      eventName: title,\r\n      eventDate: start,\r\n      eventTime: end,\r\n      selectedEventId: id,\r\n      notes\r\n    }\r\n  },\r\n\r\n  [deleteEventType]: (state, { payload }) => ({\r\n    ...state,\r\n    events: state.events.filter(({ id }) => id !== payload.selectedEventId)\r\n  })\r\n\r\n});","import React from 'react';\r\nimport { Form } from 'antd';\r\n\r\nexport const FormField = ({ content, form, withValidation, fieldName, value }) => {\r\n  const config = {\r\n    rules: [{\r\n      required: true,\r\n      message: 'This field is required!'\r\n    }],\r\n    initialValue: value\r\n  };\r\n  return (\r\n    <Form.Item className=\"mb-0\">\r\n      {\r\n        withValidation ?\r\n          form.getFieldDecorator(fieldName, config)(content) :\r\n          content\r\n      }\r\n    </Form.Item>\r\n  )\r\n}","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nexport const PopupButtons = ({ onClose, onSubmit, closeText, submitText, toUpperCase }) => {\r\n  const buttonClassName = 'calendar__popup__btn';\r\n  return (\r\n    <div className=\"d-flex justify-content-between mt-2\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={onClose}\r\n        className={cn(buttonClassName, `${buttonClassName}--close`, toUpperCase && `${buttonClassName}--upper`)}\r\n      >\r\n        {closeText}\r\n      </button>\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className={cn(buttonClassName, toUpperCase && `${buttonClassName}--upper`)}\r\n      >\r\n        {submitText}\r\n      </button>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Form, Icon, Input, DatePicker, TimePicker } from 'antd';\r\nimport '../shared/appLayout/styles/animation.scss';\r\nimport { FormField } from '../FormField';\r\nimport { PopupButtons } from './PopupButtons';\r\n\r\nconst EventPopup = ({ popupCoordinates, closePopup, popupShown, selectedEventId, eventName, eventTime, eventDate, form, onPropertyChange,\r\n  createEvent, notes, deleteEvent }) => {\r\n\r\n  const { validateFields } = form;\r\n\r\n  const onEventDelete = eventId => {\r\n    deleteEvent(eventId);\r\n    closePopup();\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    validateFields((error, values) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n\r\n      for (let key in values) {\r\n        onPropertyChange(key, values[key])\r\n      }\r\n\r\n      createEvent(selectedEventId);\r\n      closePopup();\r\n    });\r\n  };\r\n\r\n  const disabledDates = (current) => current && current <= moment().endOf('day');\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={popupShown}\r\n      timeout={400}\r\n      classNames=\"animation__popup\"\r\n      unmountOnExit\r\n    >\r\n      <div\r\n        className=\"calendar__popup\"\r\n        style={{ top: popupCoordinates.y, left: popupCoordinates.x }}\r\n      >\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Icon type=\"close-circle\" onClick={closePopup} />\r\n        </div>\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormField\r\n            form={form}\r\n            fieldName='eventName'\r\n            value={eventName}\r\n            content={\r\n              <Input placeholder=\"Event Name\" />\r\n            }\r\n            withValidation\r\n          />\r\n          <FormField\r\n            form={form}\r\n            fieldName='eventDate'\r\n            value={eventDate ? moment(eventDate) : null}\r\n            content={\r\n              <DatePicker disabledDate={disabledDates} />\r\n            }\r\n            withValidation\r\n          />\r\n          <FormField\r\n            form={form}\r\n            fieldName='eventTime'\r\n            value={eventTime ? moment(eventTime) : null}\r\n            content={\r\n              <TimePicker />\r\n            }\r\n            withValidation\r\n          />\r\n          <FormField\r\n            form={form}\r\n            fieldName='notes'\r\n            value={notes}\r\n            content={\r\n              <Input placeholder=\"Notes\" />\r\n            }\r\n            withValidation\r\n          />\r\n          {\r\n            selectedEventId ?\r\n              <PopupButtons\r\n                onClose={() => onEventDelete(selectedEventId)}\r\n                onSubmit={handleSubmit}\r\n                closeText='discard'\r\n                submitText='edit'\r\n                toUpperCase\r\n              /> :\r\n              <PopupButtons\r\n                onSubmit={handleSubmit}\r\n                onClose={closePopup}\r\n                closeText='Cancel'\r\n                submitText='Save'\r\n              />\r\n          }\r\n        </Form>\r\n      </div>\r\n    </CSSTransition>\r\n  )\r\n};\r\n\r\nconst withFormPopup = Form.create({ name: 'calendar_popup_form' })(EventPopup);\r\n\r\nexport { withFormPopup as EventPopup };","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar';\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { actionCreators } from '../../store/calendar/calendarStore';\r\nimport { EventPopup } from './EventPopup';\r\nimport './Calendar.scss';\r\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst DnDCalendar = withDragAndDrop(BigCalendar);\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Calendar = ({ events, onEventDateChange, onPropertyChange, selectedEventId, eventName, eventDate, eventTime, notes, setInitialFields, \r\n  setEventInfo, createEvent, deleteEvent }) => {\r\n\r\n  const [popupShown, setPopupShown] = useState(false);\r\n  const [popupCoordinates, setPopupCoordinates] = useState({ x: null, y: null });\r\n\r\n  const closePopup = () => {\r\n    setPopupShown(false);\r\n    setInitialFields();\r\n  }\r\n\r\n  const showDetailsPopup = (event, target) => {\r\n\r\n    if (popupShown) {\r\n      closePopup();\r\n      return;\r\n    }\r\n    else {\r\n      const isCreatedEvent = !!event.id;\r\n      if (isCreatedEvent) {\r\n        setEventInfo(event.id);\r\n      }\r\n\r\n      if (target) {\r\n        const bounds = target.getBoundingClientRect();\r\n        const { x, y, width, height } = bounds;\r\n        const coordX = x - (width / 2);\r\n        const coordY = y + height + 20;\r\n\r\n        setPopupCoordinates({ x: coordX, y: coordY });\r\n        setPopupShown(!popupShown);\r\n      }\r\n\r\n      if (event.action === 'click') {\r\n        const { x, y } = event.box;\r\n        setPopupCoordinates({ x: x - 100, y: y + 20 })\r\n        setPopupShown(!popupShown);\r\n      }\r\n    }\r\n  }\r\n\r\n  const eventPopupProps = {\r\n    popupCoordinates, closePopup, popupShown, onPropertyChange, createEvent,\r\n    eventName, eventDate, eventTime, notes, selectedEventId, deleteEvent\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <EventPopup {...eventPopupProps} />\r\n      <DnDCalendar\r\n        onSelectSlot={showDetailsPopup}\r\n        onEventResize={() => null}\r\n        onSelectEvent={(event, { target }) => showDetailsPopup(event, target)}\r\n        onEventDrop={onEventDateChange}\r\n        style={{ height: \"700px\" }}\r\n        defaultDate={new Date()}\r\n        localizer={localizer}\r\n        defaultView=\"month\"\r\n        events={events}\r\n        selectable\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst connectedCalendar = connect(\r\n  state => ({ ...state.calendar }),\r\n  dispatch => bindActionCreators(actionCreators, dispatch)\r\n)(Calendar);\r\n\r\nexport { connectedCalendar as Calendar };","import React from 'react';\r\n\r\nexport const NotFoundPage = () => (\r\n  <div className=\"d-flex flex-column align-items-center justify-content-center p-5\">\r\n    <h1>404</h1>\r\n    <h2>Page Not Found</h2>\r\n    <p className='mt-2'>Please select Calendar</p>\r\n  </div>\r\n);","export const sidebarOptions = [\r\n  {\r\n    key: 'Home',\r\n    link: '/',\r\n    iconType: 'home',\r\n  },\r\n  {\r\n    key: 'Dashboard',\r\n    link: '/dashboard',\r\n    iconType: 'bar-chart',\r\n  },\r\n  {\r\n    key: 'Inbox',\r\n    link: '/inbox',\r\n    iconType: 'mail',\r\n  },\r\n  {\r\n    key: 'Products',\r\n    link: '/products',\r\n    iconType: 'shop',\r\n  },\r\n  {\r\n    key: 'Invoices',\r\n    link: '/invoices',\r\n    iconType: 'container',\r\n  },\r\n  {\r\n    key: 'Customers',\r\n    link: '/customers',\r\n    iconType: 'user',\r\n  },\r\n  {\r\n    key: 'Chatroom',\r\n    link: '/chatroom',\r\n    iconType: 'wechat',\r\n  },\r\n  {\r\n    key: 'Calendar',\r\n    link: '/calendar',\r\n    iconType: 'calendar',\r\n  },\r\n  {\r\n    key: 'Help Center',\r\n    link: '/center',\r\n    iconType: 'team',\r\n  },\r\n  {\r\n    key: 'Settings',\r\n    link: '/settings',\r\n    iconType: 'setting',\r\n  }\r\n];\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { sidebarOptions } from './sideBarOptions';\r\n\r\nconst { Sider } = Layout;\r\nconst { Item } = Menu;\r\n\r\nconst SideBar = ({ history }) => {\r\n\r\n  const renderMenuItems = () => sidebarOptions.map(({ key, link, iconType }) => (\r\n    <Item key={key} onClick={() => history.push(link)}>\r\n      <Icon type={iconType} />\r\n      <span>{key}</span>\r\n    </Item>\r\n  ));\r\n\r\n  return (\r\n    <Sider>\r\n      <div className=\"calendar__sidebar-header d-flex align-items-center\">impekable</div>\r\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['Calendar']}>\r\n        {renderMenuItems()}\r\n      </Menu>\r\n    </Sider>\r\n  )\r\n};\r\n\r\nconst withRouterSideBar = withRouter(SideBar);\r\n\r\nexport { withRouterSideBar as SideBar };","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { SideBar } from './SideBar';\r\n\r\nexport const AppLayout = ({ children }) => {\r\n  const { Header, Content } = Layout;\r\n  return (\r\n    <div className=\"calendar__layout\">\r\n      <Layout>\r\n        <SideBar />\r\n        <Layout>\r\n          <Header>\r\n            App Header\r\n          </Header>\r\n          <Content>\r\n            {children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  )\r\n};","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport { Calendar } from './components/calendar/Calendar';\nimport { NotFoundPage } from './components/shared/NotFoundPage';\nimport { AppLayout } from './components/shared/appLayout/AppLayout';\n\nconst App = () => (\n  <AppLayout>\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/calendar\" />\n      <Route path='/calendar' component={Calendar} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </AppLayout>\n);\n\nexport default App;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport * as Calendar from './calendar/calendarStore';\r\n\r\nexport default function configureStore(history, initialState) {\r\n  const reducers = {\r\n    calendar: Calendar.reducer,\r\n  };\r\n\r\n  const middleware = [\r\n    thunk,\r\n    routerMiddleware(history)\r\n  ];\r\n\r\n  const enhancers = [];\r\n  const isDevelopment = process.env.NODE_ENV === 'development';\r\n  if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\r\n    enhancers.push(window.devToolsExtension());\r\n  }\r\n\r\n  const rootReducer = combineReducers({\r\n    ...reducers,\r\n    // routing: routerReducer,\r\n    router: connectRouter(history)\r\n  });\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ...enhancers)\r\n  );\r\n}\r\n\r\nexport const history = createBrowserHistory();\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport App from './App';\nimport configureStore, { history } from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nconst initialState = window.initialReduxState;\nconst store = configureStore(history, initialState);\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  rootElement);\n\nserviceWorker.unregister();"],"sourceRoot":""}